name: Build

on: [push]

jobs:
    build:
        # Do not upgrade to latest, 2022 will not compile natively.
        runs-on: windows-2019
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            
            - name: Setup MSBuild
              uses: microsoft/setup-msbuild@v1

            - name: Setup NuGet
              uses: NuGet/setup-nuget@v1
      
            - name: Navigate to Workspace
              run: cd $GITHUB_WORKSPACE

            - name: Create Build Directory
              run: mkdir _build
              
            - name: Restore Packages
              run: nuget restore SampleWebAPI.sln
              
            - name: Build Solution
              run: |
                msbuild.exe SampleWebAPI.sln /nologo /nr:false /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:PublishUrl="../_build"
                cd SampleWebAPI/bin
                ls
                cd ..
                ls
                cd obj\Release\
                ls
                cd ..
                cd ..
                ls
                Compress-Archive .\obj\ release.zip
                pwd
                ls
                
            - name: Upload to Storage
              uses: LanceMcCarthy/Action-AzureBlobUpload@v2
              with:
                connection_string: ${{ secrets.AzureBlobConnectionString }}
                container_name: q2salomon
                source_folder: SampleWebAPI\release.zip
                # If the file exists remove it
                delete_if_exists: true

            
            #- name: Upload artifact
            #  uses: actions/upload-artifact@v3
            #  with:
            #    name: SampleWebAPI
            #    path: "./SampleWebAPI/bin" 
            
    terraform_apply:
      needs: build
      runs-on: ubuntu-latest
      steps: 
            # Test to see echo
            - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
            - uses: actions/checkout@v1

            - name: Install Terraform
              env:
                TERRAFORM_VERSION: "1.1.9"
              run: |
                  tf_version=$TERRAFORM_VERSION
                  wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
                  unzip terraform_"$tf_version"_linux_amd64.zip
                  sudo mv terraform /usr/local/bin/

            - name: Verify Terraform version
              run: terraform --version

            - name: Terraform init
              env:
                ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
                ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
                ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
              run: terraform init -input=false
      
            - name: Terraform plan
              env:
                ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
                ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
                ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
              run: terraform plan
